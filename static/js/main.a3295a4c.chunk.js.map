{"version":3,"sources":["todoLogo.png","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","todoValue","id","Date","now","value","isDone","this","push","setState","updatedlist","filter","item","input","className","src","logo","width","height","type","placeholder","required","onChange","e","updateInput","target","onClick","addItem","disabled","length","map","name","checked","isdone","deleteItem","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,MAA0B,qC,eCgG1BA,E,kDAzFb,WAAYC,GAAQ,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAO,IAJO,E,2CAQnB,SAAQC,GACN,GAAiB,KAAdA,EAAiB,CAClB,IAAMF,EAAU,CACdG,GAAIC,KAAKC,MACTC,MAAOJ,EACPK,QAAS,GAELN,EAAI,YAAOO,KAAKT,MAAME,MAC5BA,EAAKQ,KAAKT,GAEVQ,KAAKE,SAAS,CACZT,OACAD,QAAS,Q,wBAKf,SAAWG,GACT,IACMQ,EADI,YAAOH,KAAKT,MAAME,MACHW,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOA,KACpDK,KAAKE,SAAS,CACdT,KAAOU,M,yBAIT,SAAYG,GACVN,KAAKE,SAAS,CAACV,QAAUc,M,oBAI3B,WAAS,IAAD,OACN,OACC,gCACE,sBAAKC,UAAU,SAAf,UACC,qBAAKC,IAAKC,EAAMC,MAAM,KAAKC,OAAO,KAAKJ,UAAU,SACjD,oBAAIA,UAAU,YAAd,yBAED,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,YAAd,0BAEA,sBAAKA,UAAU,gBAAf,UACG,uBAAOK,KAAK,OAAOL,UAAU,aAAaM,YAAY,eACtDC,UAAQ,EACRhB,MAAOE,KAAKT,MAAMC,QAClBuB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAYD,EAAEE,OAAOpB,UAG5C,wBACCS,UAAU,UACVY,QAAS,kBAAM,EAAKC,QAAQ,EAAK7B,MAAMC,UACvC6B,UAAWrB,KAAKT,MAAMC,QAAQ8B,OAH/B,yBAMA,qBAAKf,UAAU,OAAf,SACE,6BACGP,KAAKT,MAAME,KAAK8B,KAAI,SAAAlB,GACnB,OACE,+BACE,uBACAO,KAAK,WACLY,KAAK,SACLC,QAASpB,EAAKqB,OACdX,SAAU,eAETV,EAAKP,MACN,wBACAS,UAAU,MACVY,QAAS,kBAAM,EAAKQ,WAAWtB,EAAKV,KAFpC,sBAROU,EAAKV,qB,GAnEbiC,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a3295a4c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todoLogo.2e12d8f9.png\";","import React from 'react';\nimport logo from \"./todoLogo.png\"\nimport './App.css';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n     super(props);\n     this.state = {\n       newItem: \"\",\n       list : []\n     }\n  }\n\n  addItem(todoValue){\n    if(todoValue !== \"\"){\n      const newItem = {\n        id: Date.now(),\n        value: todoValue,\n        isDone : false\n      };\n      const list = [...this.state.list];\n      list.push(newItem);\n\n      this.setState({\n        list,\n        newItem: \"\"\n      });\n    }\n  }\n\n  deleteItem(id){\n    const list = [...this.state.list];\n    const updatedlist = list.filter(item => item.id !== id)\n    this.setState({\n    list : updatedlist\n    })\n  }\n\n  updateInput(input){\n    this.setState({newItem : input})\n  }\n\n\n  render(){\n    return(\n     <div>\n       <div className=\"header\">\n        <img src={logo} width=\"80\" height=\"80\" className=\"logo\"/>\n        <h1 className=\"app-title\">TODO APP</h1>\n       </div>\n       <div className=\"container\">\n         <h4 className=\"main-text\">ADD AN EVENT</h4>\n         {/* <br/> */}\n         <div className=\"todoContainer\">\n            <input type=\"text\" className=\"input-text\" placeholder=\"Write a todo\"\n            required\n            value={this.state.newItem}\n            onChange={e => this.updateInput(e.target.value)}\n            >\n            </input>\n         <button\n          className=\"add-btn\"\n          onClick={() => this.addItem(this.state.newItem)}\n          disabled={!this.state.newItem.length}\n          >Add Todo</button>\n         </div>\n         <div className=\"list\">\n           <ul>\n             {this.state.list.map(item => {\n               return(\n                 <li key={item.id}>\n                   <input\n                   type=\"checkbox\"\n                   name=\"idDone\"\n                   checked={item.isdone}\n                   onChange={() => {}}\n                   />\n                   {item.value}\n                   <button\n                   className=\"btn\"\n                   onClick={() => this.deleteItem(item.id)}\n                   >Delete</button>\n                 </li>\n               )\n             })}\n           </ul>\n         </div>\n       </div>\n     </div>\n      )\n    }\n  }\n  \n  \nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}